module Master(
input enable, reset, miso, clk,
output reg mosi, cs,
input [31:0] dataIN,
output [31:0] dataOUT
);
reg temp;
integer mode = 0;
reg [31:0] data;
assign dataOUT = data;
always @ (posedge clk ) begin
if (clk == 1) begin
if (reset) begin
data <= 32'b00000000;
cs <= 1'b1;
mosi <= 1'b0;
end
else if (enable === 1 ) begin
cs <= 1'b0;
data [31:1] <= data [30:0];
data [0] <= miso;
end
else if (enable === 1'b0 && dataIN !== 1'b0) begin
data <= dataIN;
cs <= 1'b1;
end
else temp = 0;
end
else temp = 0;
end
always @(negedge clk) begin
assign slaveDataOUT = data;
always @ (posedge clk) begin
if (reset) begin
counter <= 0;
data <= 32'b00000000;
miso <= 1'b0;
end
else begin
if (cs === 1'b0) begin
counter <= counter + 1;
miso <= data[31];
if (counter == 32) begin
done <= 1;
counter <= 0;
end
else temp = 0;
end
if (clk == 0) begin
if (reset) begin
data <= 32'b00000000;
cs <= 1'b1;
mosi <= 1'b0;
end
else if (enable === 1'b1) begin
cs <= 1'b0;
mosi <= data[31];
end
else if (enable === 1'b0 && dataIN !== 1'b0) begin
data <= dataIN;
cs <= 1'b1;
end
else temp =0;
end
else temp = 0;
end
endmodule
